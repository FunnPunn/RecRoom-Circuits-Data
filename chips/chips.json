{
    "Absolute Value": {
        "Description": "Outputs the magnitude of the number. Is always positive.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Absolute Value",
                "ReadonlyTypeParams": {
                    "T": "(float | int)"
                },
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Acos": {
        "Description": "Computes the arccosine of a number.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Acos",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Consumable Activate": {
        "Description": "Sets the input consumable to active. Use this to confirm a consumable used event. Can also be used independently. Displays the consumable as active in the backback and decreases the number of comsumables the player owns.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Consumable Activate",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Consumable",
                        "ReadonlyType": "Consumable",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Add Currency": {
        "Description": "Adds some amount to the Player's balance of one room currency. Configure this chip to set the affected currency.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Add Currency",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Amount",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "On Add Currency Complete",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Total Balance",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Add": {
        "Description": "Computes the sum of two or more inputs.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Add",
                "ReadonlyTypeParams": {
                    "T": "(int | float | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Sum",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Add Tag": {
        "Description": "Adds a tag to the input object or player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Add Tag",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Add Tags": {
        "Description": "Adds tags to the input object or player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Add Tags",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Tags",
                        "ReadonlyType": "List<string>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Get Line of Sight Parameters": {
        "Description": "Outputs the current line of sight parameters from the input AI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Get Line of Sight Parameters",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vision Type",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Vision Range (m)",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Vision Cone Angle",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Hearing Range (m)",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Get Target": {
        "Description": "Outputs the current combat target of an inputted AI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Get Target",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Combatant",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Has Line of Sight To Target": {
        "Description": "Outputs if the input AI has line of sight to the input target.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Has Line of Sight To Target",
                "ReadonlyTypeParams": {
                    "T": "(AI | Combatant | Rec Room Object | Patrol Point | Player | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Has LoS",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Look At": {
        "Description": "Command an AI to look at the input target. If you want the AI to look in a passed in vector as a direction, set the “Look Target Is Direction” parameter to True. To make an AI stop looking, use the AI Stop Looking node.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Look At",
                "ReadonlyTypeParams": {
                    "T": "(AI | Combatant | Rec Room Object | Patrol Point | Player | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    },
                    {
                        "Name": "Look Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Look Target is Direction",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Variable": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "AI",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "AI",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Path To": {
        "Description": "Commands the AI to path to the input target destination.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Path To",
                "ReadonlyTypeParams": {
                    "T": "(AI | Combatant | Rec Room Object | Patrol Point | Player | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Rotate": {
        "Description": "Commands an AI to turn an inputted number of degrees. To command the AI to back to default rotating behavior, use the AI Stop Looking node.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Rotate",
                "ReadonlyTypeParams": {
                    "T": "(float | int | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    },
                    {
                        "Name": "Rotation (degrees)",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Set Line of Sight Parameters": {
        "Description": "Sets an AI’s various LoS paramters. The “Cone” setting acts like a vision cone that sits in front of AIs like eyes, where the “Circle” setting acts like a radius around the AI. The Require LoS For Targetting parameter defines if AIs can see you through walls.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Set Line of Sight Parameters",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    },
                    {
                        "Name": "Vision Type (Cone/Circle)",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Vision Range (m)",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Vision Cone Angle (Cone Type Only)",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Hearing Range (m)",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Require LoS for targeting",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Set Pathing Speed": {
        "Description": "Sets the speed for an inputted AI. This same setting can be determined by configuring the AI itself.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Set Pathing Speed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    },
                    {
                        "Name": "Speed (m/s)",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Set Patrol Point": {
        "Description": "Set an AIs Path Point.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Set Patrol Point",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    },
                    {
                        "Name": "Patrol Point",
                        "ReadonlyType": "Patrol Point",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Set Target": {
        "Description": "Sets the input AI’s current target.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Set Target",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Combatant",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Start Combat Behavior": {
        "Description": "RRO Quest AI black box. This node tells the input AI to start their C# defined combat behavior. Note: this behavior varies per AI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Start Combat Behavior",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Stop Combat Behavior": {
        "Description": "Tells the input AI to stop its C# defined combat behavior.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Stop Combat Behavior",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "AI Stop Looking": {
        "Description": "Command the input AI to cancel its current Rotate and Look At commands. Call this before telling an AI to path after having it Rotate/Look At so it rotates properly while moving again.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "AI Stop Looking",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ambience": {
        "Description": "Choose from a selection of ambient audio tracks, for use with the Audio Player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ambience Constant",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Audio",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "And": {
        "Description": "Outputs True when all inputs are True. If any input is False, it outputs False.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "And",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Input",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Angular Velocity Add (Deprecated)": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "NodeDescs": [
            {
                "Name": "Angular Velocity Add (Deprecated)",
                "ReadonlyTypeParams": {
                    "T": "(Vector3 | Quaternion)"
                },
                "Inputs": [
                    {
                        "Name": "Add Velocity",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Rotation",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Velocity Multiplier",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Max Angular Velocity Applied (deg/s)",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Angular Velocity Add": {
        "Description": "Add angular velocity to an object. The Angular Velocity vector should lie along the axis of the rotation being added, with a magnitude that (once multiplied by the speed multiplier) represents the clockwise rotation speed in deg/s. Once the new angular velocity has been computed, its speed will be capped by the Max Angular Speed.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Angular Velocity Add",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Add Velocity",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Angular Velocity",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Speed Multiplier",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Max Angular Speed (deg/s)",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Angular Velocity Set (Deprecated)": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "NodeDescs": [
            {
                "Name": "Angular Velocity Set (Deprecated)",
                "ReadonlyTypeParams": {
                    "T": "(Vector3 | Quaternion)"
                },
                "Inputs": [
                    {
                        "Name": "Set Velocity",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Rotation",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Velocity Multiplier",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Angular Velocity Set": {
        "Description": "Sets the angular velocity of an object. The Angular Velocity vector should lie along the axis of rotation, with a magnitude that (once multiplied by the speed multiplier) represents the clockwise rotation speed in deg/s.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Angular Velocity Set",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Set Velocity",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Angular Velocity",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Speed Multiplier",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Asin": {
        "Description": "Computes the arcsine of a number.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Asin",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Atan2": {
        "Description": "Computes the 2-argument arctangent of a number.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Atan2",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Y",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "X",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Atan": {
        "Description": "Computes the arctangent of a number.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Atan",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Audio Player Get Playing": {
        "Description": "Returns True if the target Audio Player is playing.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Audio Player Get Playing",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Audio Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Playing",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Audio Player Get Speed": {
        "Description": "Returns the speed multiplier of the target Audio Player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Audio Player Get Speed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Audio Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Speed",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Audio Player Get Volume": {
        "Description": "Returns the volume multiplier of the target Audio Player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Audio Player Get Volume",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Audio Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Volume",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Audio Player Pause": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Audio Player Pause",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Pause",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Audio Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Audio Player Play": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Audio Player Play",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Play",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Audio Player",
                        "Description": ""
                    },
                    {
                        "Name": "Media",
                        "ReadonlyType": "Audio",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Audio Player Set Speed": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Audio Player Set Speed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Set Speed",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Audio Player",
                        "Description": ""
                    },
                    {
                        "Name": "Speed",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Audio Player Set Volume": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Audio Player Set Volume",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Set Volume",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Audio Player",
                        "Description": ""
                    },
                    {
                        "Name": "Volume",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Audio Player Stop": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Audio Player Stop",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Stop",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Audio Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Audio Player Time Stamp": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Audio Player Time Stamp",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Audio Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Time Stamp",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Beacon Get Color": {
        "Description": "Returns the color of the target Beacon object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Beacon Get Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Beacon",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Beacon Get Enabled": {
        "Description": "Outputs True if the target Beacon object is enabled.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Beacon Get Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Beacon",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Beacon Get Height": {
        "Description": "Returns the height of the target Beacon object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Beacon Get Height",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Beacon",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Height",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Beacon Set Color": {
        "Description": "Sets the color of the target Beacon object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Beacon Set Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Beacon",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Beacon Set Enabled": {
        "Description": "Sets the enabled state of the target Beacon object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Beacon Set Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Beacon",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Beacon Set Height": {
        "Description": "Sets the height of the target Beacon object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Beacon Set Height",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Beacon",
                        "Description": ""
                    },
                    {
                        "Name": "Height",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit And": {
        "Description": "Computes a bitwise AND. The result has a bit set for every bit that is set in both of the inputs.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit And",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit Leading Zeros": {
        "Description": "Counts the number of zeros at the beginning (most significant side) of the binary representation of an integer.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit Leading Zeros",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Leading Zeros",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit Nand": {
        "Description": "Computes a bitwise NAND. (NOT AND) The result has a bit set for every bit that is not set in either of the inputs.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit Nand",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit Not": {
        "Description": "Computes a bitwise NOT. The result has a bit set for every bit that is not set in the input.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit Not",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit Or": {
        "Description": "Computes a bitwise OR. The result has a bit set for every bit that is set in either of the inputs.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit Or",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit Pop Count": {
        "Description": "Counts the number of set bits in the binary representation of an integer.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit Pop Count",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Population",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit Rotate Left": {
        "Description": "Rotates digits in the binary representation of an integer to the left. As the leftmost bits fall off, they are used to fill the rightmost bits.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit Rotate Left",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Shift",
                        "ReadonlyType": "int",
                        "Description": "Number of bits to rotate"
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit Rotate Right": {
        "Description": "Rotates digits in the binary representation of an integer to the right. As the rightmost bits fall off, they are used to fill the leftmost bits.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit Rotate Right",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Shift",
                        "ReadonlyType": "int",
                        "Description": "Number of bits to rotate"
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit Shift Left": {
        "Description": "Shifts a value left by a number of bits. Leftmost bits are discarded, and rightmost bits are filled with zeros.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit Shift Left",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Shift",
                        "ReadonlyType": "int",
                        "Description": "Shift count. The actual shift performed will be this value mod 32."
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit Shift Right": {
        "Description": "Shifts a value right by a number of bits. Rightmost bits are discarded, and leftmost bits are filled with zeros. (Logical shift)",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit Shift Right",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Shift",
                        "ReadonlyType": "int",
                        "Description": "Shift count. The actual shift performed will be this value mod 32."
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit Trailing Zeros": {
        "Description": "Counts the number of zeros at the end (least significant side) of the binary representation of an integer.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit Trailing Zeros",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Trailing Zeros",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Bit Xor": {
        "Description": "Computes a bitwise XOR. The result has a bit set for every bit that is set in exactly one of the inputs.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Bit Xor",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "bool Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "bool Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "If": {
        "Description": "Takes a boolean condition as an input. If True, the \"Then\" exec pin fires. If False, the \"Else\" exec pin fires.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "If",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Condition",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Then",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Else",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Break Tuple": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Break Tuple",
                "ReadonlyTypeParams": {
                    "T0": "any",
                    "T1": "any"
                },
                "Inputs": [
                    {
                        "Name": "Tuple",
                        "ReadonlyType": "(T0, T1)",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Item 0",
                        "ReadonlyType": "T0",
                        "Description": ""
                    },
                    {
                        "Name": "Item 1",
                        "ReadonlyType": "T1",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Button Get Is Pressed": {
        "Description": "Outputs a target Button's Pressed property.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Button Get Is Pressed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Button",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Is Pressed",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Button Get Text": {
        "Description": "Outputs a target Button's Text property.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Button Get Text",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Button",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Text",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Button Set Text": {
        "Description": "Sets an input Button's Text property.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Button Set Text",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Button",
                        "Description": ""
                    },
                    {
                        "Name": "Text",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ceil": {
        "Description": "Returns the least integral value greater than or equal to the input value.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ceil",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ceil to Int": {
        "Description": "Returns the smallest integer value greater than or equal to the input value.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ceil to Int",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Circuit Board": {
        "Description": "Use as a way to encapsulate your logic. You can have as many inputs and outputs as you like. Use the Edit tool to open up the Circuit Board and add nodes inside it to encapsulate the logic. Hit done editing on your Maker Pen to leave the Circuit Board context.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": []
    },
    "Clear Player Vignette": {
        "Description": "Clears any active screen vignette on the given player.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Clear Player Vignette",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Clear Player World UI": {
        "Description": "Clear the UI configuration displayed above a given player.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Clear Player World UI",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Clear Current Subtitle": {
        "Description": "Clears any subtitle which is currently being displayed for the given player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Clear Current Subtitle",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Collision Data Get Distance": {
        "Description": "Gets distance in meters of an object/player from center specified in \"Overlap Sphere\" chip.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Collision Data Get Distance",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Collision Data",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Distance",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Collision Data Get Normal": {
        "Description": "Gets unit vector specifying the direction of an object/player from center specified in \"Overlap Sphere\" chip.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Collision Data Get Normal",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Collision Data",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Normal",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Collision Data Get Object": {
        "Description": "Gets object of a collision data (or null for players) returned from \"Overlap Sphere\" chip.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Collision Data Get Object",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Collision Data",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Collision Data Get Player": {
        "Description": "Gets player of a collision data (or null for objects) returned from \"Overlap Sphere\" chip.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Collision Data Get Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Collision Data",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Collision Data Get Position": {
        "Description": "Gets position of an object/player returned by \"Overlap Sphere\" chip.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Collision Data Get Position",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Collision Data",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Color": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Color Constant",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Color Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Color Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Color To Int": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "NodeDescs": [
            {
                "Name": "Color To Int",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Int",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Combatant Get Ground Position": {
        "Description": "Outputs the ground position of an input combatant.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Combatant Get Ground Position",
                "ReadonlyTypeParams": {
                    "T": "(AI | Combatant | Player)"
                },
                "Inputs": [
                    {
                        "Name": "Combatant",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Ground Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Combatant Get Health": {
        "Description": "Outputs the Health property of the input combatant.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Combatant Get Health",
                "ReadonlyTypeParams": {
                    "T": "(AI | Combatant | Player)"
                },
                "Inputs": [
                    {
                        "Name": "Object",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Health",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Shield",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Max Health",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Combatant Get Is Alive": {
        "Description": "Outputs True if the input combatant is alive.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Combatant Get Is Alive",
                "ReadonlyTypeParams": {
                    "T": "(AI | Combatant | Player)"
                },
                "Inputs": [
                    {
                        "Name": "Object",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Is Alive",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Combatant Get Velocity": {
        "Description": "Outputs the input combatant's current velocity and speed.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Combatant Get Velocity",
                "ReadonlyTypeParams": {
                    "T": "(AI | Combatant | Player)"
                },
                "Inputs": [
                    {
                        "Name": "Combatant",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Velocity",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Speed",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Combatant Variable": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Combatant Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Combatant",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Combatant",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Combatant Receive Damage": {
        "Description": "Deals damage to the given target combatant with various parameters.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Combatant Receive Damage",
                "ReadonlyTypeParams": {
                    "T": "(AI | Combatant | Player)",
                    "U": "(AI | Combatant | Player)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Damage",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Ignore Shield",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Damage Source (Combatant)",
                        "ReadonlyType": "U",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Combatant Set Health": {
        "Description": "Sets the Health property of an input combatant.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Combatant Set Health",
                "ReadonlyTypeParams": {
                    "T": "(AI | Combatant | Player)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Health",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Combatant Set Max Health": {
        "Description": "Sets the Max Health property of the input combatant.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Combatant Set Max Health",
                "ReadonlyTypeParams": {
                    "T": "(AI | Combatant | Player)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Max Health",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Combatant Split": {
        "Description": "Splits the input Combatant into Player and AI types. Use this off of Combatant outputs to directly access the Player or AI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Combatant Split",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Combatant",
                        "ReadonlyType": "Combatant",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Is Player",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "AI",
                        "ReadonlyType": "AI",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "i": {
        "Description": "Put a comment next to your circuits to explain what they're doing.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Comment",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": []
            }
        ]
    },
    "Consumable": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Consumable Constant",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Consumable",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Destination Room": {
        "Description": "Configure this constant to choose a destination, specifying room, subroom, and welcome mat. If destination room is different than current room, only Entry Subrooms may be targeted. Party follow options may vary by destination. Use this chip with Go To Room.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Destination Room Constant",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Destination Room",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Room Key Constant": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Room Key Constant",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Room Key",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Cos": {
        "Description": "Computes the cosine of a number.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Cos",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Costume Equip": {
        "Description": "Equip a Player with a costume.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Costume Equip",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Costume",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Costume Get Wearer": {
        "Description": "Get Player wearing a costume.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Costume Get Wearer",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Costume",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Costume Unequip": {
        "Description": "Unequip a costume.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Costume Unequip",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Costume",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rec Room Object Get All with Tag": {
        "Description": "Searches the room for all objects with the input tag and outputs them as a list.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rec Room Object Get All with Tag",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Objects with Tag",
                        "ReadonlyType": "List<Rec Room Object>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rec Room Object Get Authority": {
        "Description": "Outputs the authority Player of the input object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rec Room Object Get Authority",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rec Room Object Get First with Tag": {
        "Description": "Gets the first object with the input tag.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rec Room Object Get First with Tag",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rec Room Object Get Is Local Player Authority": {
        "Description": "Outputs True on the player's machine who has authority of the input.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rec Room Object Get Is Local Player Authority",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rec Room Object Get Last Equipping Player": {
        "Description": "Returns the player who last held an object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rec Room Object Get Last Equipping Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Currently Equipped",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rec Room Object Variable": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rec Room Object Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Consumable Deactivate": {
        "Description": "Sets the input consumable to inactive. Displays the consumable as not active in the backback and allow using another one.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Consumable Deactivate",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Consumable",
                        "ReadonlyType": "Consumable",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Delay": {
        "Description": "Fires outputs based on the inputted time to delay. The Run exec fires as soon as the node is executed. The After Delay exec fires once the input delay duration has completed. After Canceled fires after the delay node’s Cancel exec has been fired. Cancel cancels all current delays running from this node, except for delays scheduled for the next tick.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Delay",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Delay (s)",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Cancel",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "After Delay",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Cancel",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Destination Room Variable": {
        "Description": "Stores a destination room. Destination cannot be configured from variable - for that, use a Constant.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Destination Room Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Destination Room",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Destination Room",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Dice Get Player Rolled": {
        "Description": "Returns the player who rolled the dice.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Dice Get Player Rolled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Die",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Dice Get Result": {
        "Description": "Returns the result of the dice.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Dice Get Result",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Die",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Dice Get Roll finished": {
        "Description": "Outputs an exec when the dice finished rolling.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Dice Get Roll finished",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Die",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Roll Finished",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set HUD Element Enabled": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set HUD Element Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Distance": {
        "Description": "Outputs the distance between the input objects.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Distance",
                "ReadonlyTypeParams": {
                    "T1": "(AI | Combatant | Rec Room Object | Player | Vector3)",
                    "T2": "(AI | Combatant | Rec Room Object | Player | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "A",
                        "ReadonlyType": "T1",
                        "Description": ""
                    },
                    {
                        "Name": "B",
                        "ReadonlyType": "T2",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Distance",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Divide": {
        "Description": "Find how many times a value contains another.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Divide",
                "ReadonlyTypeParams": {
                    "T": "(int | float | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Quotient",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Door Get Destination": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Door Get Destination",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Room Door",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Destination",
                        "ReadonlyType": "Destination Room",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Door Get Locked": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Door Get Locked",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Room Door",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Locked",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Door Set Destination": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Door Set Destination",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Room Door",
                        "Description": ""
                    },
                    {
                        "Name": "Room",
                        "ReadonlyType": "Destination Room",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Door Set Locked": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Door Set Locked",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Set Locked",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Room Door",
                        "Description": ""
                    },
                    {
                        "Name": "Locked",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Set Locked",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Emitter Get Looping": {
        "Description": "Returns True if the target Emitter is looping.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Emitter Get Looping",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Emitter",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Looping",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Emitter Get Playing": {
        "Description": "Returns True if the target Emitter is playing.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Emitter Get Playing",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Emitter",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Playing",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Emitter Get Size": {
        "Description": "Returns the size multiplier of the target Emitter.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Emitter Get Size",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Emitter",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Size",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Emitter Get Speed": {
        "Description": "Returns the speed multiplier of the target Emitter.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Emitter Get Speed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Emitter",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Speed",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Emitter Set Color Id": {
        "Description": "Sets the color for the particles emitted.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "NodeDescs": [
            {
                "Name": "Emitter Set Color Id",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Emitter",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Emitter Set Color": {
        "Description": "Sets the color for the particles emitted.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Emitter Set Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Emitter",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Emitter Set Looping": {
        "Description": "Makes the emitter emit continuously or not.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Emitter Set Looping",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Emitter",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Emitter Set Size": {
        "Description": "Sets the size of the particles emitted.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Emitter Set Size",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Emitter",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Emitter Set Speed": {
        "Description": "Sets the speed particles are emitted.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Emitter Set Speed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Emitter",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Emitter Start": {
        "Description": "Starts emitting particles.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Emitter Start",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Emitter",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Emitter Stop": {
        "Description": "Stops emitting particles.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Emitter Stop",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Emitter",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Equals": {
        "Description": "Compares the two input values and outputs True if they are the same. False if they are different.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Equals",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "A",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "B",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Equals",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Event Definition": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Event Definition",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": []
            }
        ]
    },
    "Event Receiver": {
        "Description": "Events are the entry points for all circuit graphs. Events are execution hooks for things like a player loading into the room, or knowing when a Button is pressed. After creating this chip, make sure to use the configure tool to choose the event you want to listen for. You can use the Event Defintion chip to create your own events to add to this list and use with the Event Sender chip.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Event Receiver",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Event Sender": {
        "Description": "Use the Event Sender to fire your custom events defined in Event Defintions. After creating this chip, make sure to use the configure tool to change the event that you want to fire. You can also change who you want to send the event to from the config menu.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Event Sender",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Execution Integer Switch": {
        "Description": "Executes the associated output of the compare value that matches the 'match' input. Executes the default output if no match can be found.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Execution Integer Switch",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Match",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Failed",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Execution String Switch": {
        "Description": "Executes the associated output of the compare value that matches the 'match' input. Executes the default output if no match can be found.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Execution String Switch",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Match",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Failed",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Explosion Emitter Explode": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Explosion Emitter Explode",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Explosion Emitter",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Explosion Emitter Get Explosion Color": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Explosion Emitter Get Explosion Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Explosion Emitter",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Explosion Emitter Get Damage": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Explosion Emitter Get Damage",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Explosion Emitter",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Damage",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Explosion Emitter Get Explosion Radius": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Explosion Emitter Get Explosion Radius",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Explosion Emitter",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Radius",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Explosion Emitter Set Explosion Color": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Explosion Emitter Set Explosion Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Explosion Emitter",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Explosion Emitter Set Damage": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Explosion Emitter Set Damage",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Explosion Emitter",
                        "Description": ""
                    },
                    {
                        "Name": "Damage",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Explosion Emitter Set Explosion Radius": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Explosion Emitter Set Explosion Radius",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Explosion Emitter",
                        "Description": ""
                    },
                    {
                        "Name": "Radius",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "float Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "float Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Floor": {
        "Description": "Returns the smallest integral value less than or equal to the input value.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Floor",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Floor to Int": {
        "Description": "Returns the smallest integer value less than or equal to the input value.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Floor to Int",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "For Each": {
        "Description": "Iterates over the input list. The loop exec fires for each element in the list. The Done exec fires once the end of the list has been reached.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "For Each",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Items",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Loop",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Item",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Done",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "For": {
        "Description": "Iterates over the \"From\" pin (inclusive) to the \"To\" pin (exclusive).",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "For",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "From (Inclusive)",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "To (Exclusive)",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Loop",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Index",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Done",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "From Rec Room Object": {
        "Description": "Converts the input Rec Room Object to the object's subtype.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "From Rec Room Object",
                "ReadonlyTypeParams": {
                    "T": "Rec Room Object"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get All Players": {
        "Description": "Outputs a list of all the players in the room currently.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get All Players",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "Players",
                        "ReadonlyType": "List<Player>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Authority": {
        "Description": "Gets the authority player of the chip's current context.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Authority",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Currency Balance": {
        "Description": "Returns the local players balance of one room currency. Configure this chip to selecht which currency to use.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Currency Balance",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "On Get Balance Complete",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Total Balance",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Broadcasting Attendance": {
        "Description": "Outputs player counts if you're in an event that's actively broadcasting.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Broadcasting Attendance",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "Audience Count",
                        "ReadonlyType": "int",
                        "Description": "Number of players watching a broadcast at this event"
                    },
                    {
                        "Name": "Broadcaster Count",
                        "ReadonlyType": "int",
                        "Description": "Number of players broadcasting themselves at this event"
                    },
                    {
                        "Name": "Is Broadcast Active",
                        "ReadonlyType": "bool",
                        "Description": "True if anyone is broadcasting. Only active broadcasts will have accurate attendance counts"
                    }
                ]
            }
        ]
    },
    "List Get Element": {
        "Description": "Gets a specified element from the input list. The \"Index\" is the location of the element in the list. The first element in the list is at index 0, the second element is at index 1.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Get Element",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "List",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    },
                    {
                        "Name": "Index",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Time Get Universal Seconds": {
        "Description": "Gets the number of seconds since 1970. Uses local player's system clock. This is not synchronized between players! This is also not guaranteed to be continuous. To measure time, use Time Get Precise Seconds instead.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Time Get Universal Seconds",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Any Player with Role": {
        "Description": "Gets a player with the role. Returns invalid player if no player has the role.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Any Player with Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Role",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get First Tag": {
        "Description": "Gets the first tag of an object or player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get First Tag",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Formatted Time": {
        "Description": "Returns the given universal time, formatted based on the C# DateTime format specifiers.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Formatted Time",
                "ReadonlyTypeParams": {
                    "T": "(float | int)"
                },
                "Inputs": [
                    {
                        "Name": "Universal Seconds",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Format",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Forward Vector": {
        "Description": "Gets the forward direction of a target, output as a vector.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Forward Vector",
                "ReadonlyTypeParams": {
                    "T": "(Rec Room Object | Player)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get HUD Element Color": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get HUD Element Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get HUD Element Label": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get HUD Element Label",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Label",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get HUD Element Max Value": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get HUD Element Max Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Max Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get HUD Element Value": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get HUD Element Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Get Count": {
        "Description": "Outputs the number of elements inside the input list.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Get Count",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "List",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Count",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player Camera Forward": {
        "Description": "Gets the direction the given player is looking, output as a vector3.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player Camera Forward",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player Camera Rotation": {
        "Description": "Gets the rotation of the given player's view, output as a quaternion.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player Camera Rotation",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Quaternion",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player Camera Up": {
        "Description": "Gets the up direction from the given player's camera, output as a vector3.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player Camera Up",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Leaderboard Get Player Stat": {
        "Description": "Get leaderboard stat for the given player on stat channel 1, 2 or 3.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Leaderboard Get Player Stat",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Channel",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "On Get Stat Complete",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Local Player": {
        "Description": "Outputs the player running this chip on their machine.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Local Player",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get New Line": {
        "Description": "Returns a new line string.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get New Line",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "New Line",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Rotation": {
        "Description": "Outputs the rotation of the target as a quaternion.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Rotation",
                "ReadonlyTypeParams": {
                    "T": "(Rec Room Object | Player)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Quaternion",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Party Of Player": {
        "Description": "Returns the party of the input player as List<Player>. If the player is not in a party, it will return a list containing only that player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Party Of Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Party",
                        "ReadonlyType": "List<Player>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player Account Name": {
        "Description": "Outputs the player's Account name (e.g Coach) in a form of a string. To get a display name, use To String.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player Account Name",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Player Name",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player By Account Name": {
        "Description": "Gets a Player based on an Account Name. (E.g. my account name is @Coach and if I input the string \"Coach\", the output would be my Player object.) Outputs an invalid Player if nobody in the room has the given account name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player By Account Name",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Name",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player By Display Name": {
        "Description": "Gets a Player based on a display name. (E.g. my display name is Coach and if I input a string \"Coach\", the output would be my Player object.) Outputs an invalid Player if nobody in the room has the given display name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player By Display Name",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Name",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player Season League Name": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player Season League Name",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Season League Name",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get All Players With Role": {
        "Description": "Outpus List<Player> that continues every player with the specified role.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get All Players With Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Role Name",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Players",
                        "ReadonlyType": "List<Player>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Enabled": {
        "Description": "Returns the enabled state of the given player's world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Primary Bar Color": {
        "Description": "Returns the color of the given player's primary bar in their current world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Primary Bar Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Primary Bar Enabled": {
        "Description": "Returns the enabled state of the given player's primary bar in their current world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Primary Bar Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Primary Bar Max Value": {
        "Description": "Returns the max value of the given player's primary bar in their current world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Primary Bar Max Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Max Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Primary Bar Value": {
        "Description": "Returns the value of the given player's primary bar in their current world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Primary Bar Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Secondary Bar Color": {
        "Description": "Returns the color of the given player's secondary bar in their current world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Secondary Bar Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Secondary Bar Enabled": {
        "Description": "Returns the enabled state of the given player's secondary bar in their current world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Secondary Bar Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Secondary Bar Max Value": {
        "Description": "Returns the max value of the given player's secondary bar in their current world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Secondary Bar Max Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Max Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Secondary Bar Value": {
        "Description": "Returns the value of the given player's secondary bar in their current world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Secondary Bar Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Text Color": {
        "Description": "Returns the color of the given player's text in their current world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Text Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Text Enabled": {
        "Description": "Returns the enabled state of the given player's text in their current world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Text Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Player World UI Text Value": {
        "Description": "Returns the value of the given player's text in their current world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Player World UI Text Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Position": {
        "Description": "Outputs the position of the input object as a vector3.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Position",
                "ReadonlyTypeParams": {
                    "T": "(AI | Combatant | Rec Room Object | Player)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Time Get Precise Seconds": {
        "Description": "Gets the amount of seconds since a player launched Rec Room.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Time Get Precise Seconds",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Room Authority": {
        "Description": "Returns the player who is the room authority.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Room Authority",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Time Get Universal Time": {
        "Description": "Gets the UTC time. Uses server's clock. This will be synchronized between players.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Time Get Universal Time",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "Year",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Month",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Day",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Hour",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Minute",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Second",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Tags": {
        "Description": "Outputs a list of tags the input object or player has.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Tags",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Tags",
                        "ReadonlyType": "List<string>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Time Get Unsynced Universal Time": {
        "Description": "Gets the UTC time. Uses local player's system clock. This is not synchronized between players!",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Time Get Unsynced Universal Time",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "Year",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Month",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Day",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Hour",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Minute",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Second",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Up Vector": {
        "Description": "Outputs the up direction of the input target, output as a vector3.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Up Vector",
                "ReadonlyTypeParams": {
                    "T": "(Rec Room Object | Player)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Velocity": {
        "Description": "Returns the velocity of a Player or a Rec Room Object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Velocity",
                "ReadonlyTypeParams": {
                    "T": "(Rec Room Object | Player)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Velocity",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Go To Room": {
        "Description": "Execution sends the specified player to a preconfigured destination. Use a destination constant or variable to specify the destination of this chip. Follow settings are a property of the destination.",
        "IsBeta": true,
        "IsTrollingRisk": true,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Go To Room",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Destination",
                        "ReadonlyType": "Destination Room",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Greater Than": {
        "Description": "Returns True if input A is greater than input B.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Greater Than",
                "ReadonlyTypeParams": {
                    "T": "(int | float)"
                },
                "Inputs": [
                    {
                        "Name": "A",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "B",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Greater or Equal": {
        "Description": "Returns True if input A is greater than or equal to input B.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Greater or Equal",
                "ReadonlyTypeParams": {
                    "T": "(int | float)"
                },
                "Inputs": [
                    {
                        "Name": "A",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "B",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Add Boost Fuel": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Add Boost Fuel",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    },
                    {
                        "Name": "Boost amount",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Apply Boost": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Apply Boost",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Success",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Failure",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Get Boost Fuel": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Get Boost Fuel",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Boost amount",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Get Driving Enabled": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Get Driving Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Driving Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Get Engine Torque Multiplier": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Get Engine Torque Multiplier",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Torque Multiplier",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Get Seated Player": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Get Seated Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    },
                    {
                        "Name": "Seat index",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Get Wheel Friction Multiplier": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Get Wheel Friction Multiplier",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Friction Multiplier",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Set Driving Enabled": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Set Driving Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Set Engine Torque Multiplier": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Set Engine Torque Multiplier",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    },
                    {
                        "Name": "Torque multiplier",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Set Seated Player": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Set Seated Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    },
                    {
                        "Name": "Seat index",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Success",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Failure",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Set Wheel Friction Multiplier": {
        "Description": "Wheel Friction affects how good the wheels are at gripping the ground - lower values decrease traction and make the wheels slip more and higher values can increase traction and make the wheels slip less. 1 is the default value for Wheel Friction.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Set Wheel Friction Multiplier",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    },
                    {
                        "Name": "Friction multiplier",
                        "ReadonlyType": "float",
                        "Description": "The lower this value is, the more the tires will slip instead of properly grabbing the ground"
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Unseat Player From Seat": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Unseat Player From Seat",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    },
                    {
                        "Name": "Seat index",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Success",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Failure",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Ground Vehicle Unseat Player": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Ground Vehicle Unseat Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Ground Vehicle",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Success",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Failure",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Add Auto Aim Role": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Add Auto Aim Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    },
                    {
                        "Name": "Role",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Apply Recoil": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Apply Recoil",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    },
                    {
                        "Name": "Angle X",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Angle Y",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Duration",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Return Duration",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Get Supports Reload": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Get Supports Reload",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Can Reload",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Get Current Ammo": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Get Current Ammo",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Ammo",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Get Firing Direction": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Get Firing Direction",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    },
                    {
                        "Name": "Source",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Direction",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Get Is Reloading": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Get Is Reloading",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Is Reloading",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Get Max Ammo": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Get Max Ammo",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Max Ammo",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Get Rate Of Fire": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Get Rate Of Fire",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Rate Of Fire",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Get Reload Duration": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Get Reload Duration",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Reload Duration",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Remove Auto Aim Role": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Remove Auto Aim Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    },
                    {
                        "Name": "Role",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Set ADS Enabled": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Set ADS Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Set Auto Aim Roles": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Set Auto Aim Roles",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    },
                    {
                        "Name": "Roles",
                        "ReadonlyType": "List<string>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Set Supports Reload": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Set Supports Reload",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    },
                    {
                        "Name": "Can Reload",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Set Current Ammo": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Set Current Ammo",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    },
                    {
                        "Name": "Ammo",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Set Max Ammo": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Set Max Ammo",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    },
                    {
                        "Name": "Max Ammo",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Set Rate Of Fire": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Set Rate Of Fire",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    },
                    {
                        "Name": "Rate Of Fire",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Gun Handle Set Reload Duration": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Gun Handle Set Reload Duration",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Gun Handle",
                        "Description": ""
                    },
                    {
                        "Name": "Reload Duration",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Has Tag": {
        "Description": "Outputs True if the input object or player has the input tag.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Has Tag",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Has Tag",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "HSV To Color": {
        "Description": "Return a color from the given hue, saturation, and value inputs. All inputs are in the range [0, 1].",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "HSV To Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Hue",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Saturation",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "HUD Element": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "HUD Element Constant",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "If Value": {
        "Description": "Outputs one input value based on the input condition. Outputs the \"Then\" input if the input condition is True. Outputs the \"Else\" input if the input condition is False. Only reads one of the inputs, not both.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "If Value",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "If",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Then",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Else",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "If Local Player Is Authority": {
        "Description": "I'm Authority exec fires on the player's machine who has authority in the current context. At the room level, this is room authority, inside an object board, this is object authority. I'm Not Authority exec fires for everyone else.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "If Local Player Is Authority",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "I'm Authority",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "I'm Not Authority",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "If Local Player Is Room Authority": {
        "Description": "I'm Authority exec fires on the player's machine who has authority over the room. I'm Not Authority exec fires for everyone else.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "If Local Player Is Room Authority",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "I'm Authority",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "I'm Not Authority",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "If Local Player Should Run": {
        "Description": "The \"Should Run\" port will exec a) if the input player is local or b) if input player is invalid and the local player has authority of the current context.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "If Local Player Should Run",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Acting Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Should Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Should Not Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "If Player Is Local": {
        "Description": "Outputs if a player is the local player or not.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "If Player Is Local",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Is Local",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Is Not Local",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Velocity Add": {
        "Description": "Adds velocity to the input target. The input velocity will be multiplied by the magnitude of the vector provided in the input direction.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Velocity Add",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "Add Velocity",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Speed (m/s)",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Direction",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Maximum Speed (m/s)",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Velocity Reflect": {
        "Description": "The input target's velocity parallel to the input direction vector is reflected along the input direction and velocities perpendicular to it, are maintained. The input velocity will be multiplied by the magnitude of the vector provided in the input direction.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Velocity Reflect",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "Reflect Velocity",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Additional Speed (m/s)",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Speed Multiplier",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Direction",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Maximum Speed (m/s)",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Velocity Set": {
        "Description": "Momentarily sets the velocity of the input target in the input direction. The input velocity will be multiplied by the magnitude of the vector provided in the input direction.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Velocity Set",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "Set Velocity",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Speed (m/s)",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Direction",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Interaction Volume Get Interaction Prompt": {
        "Description": "Gets the interaction promt of an Interaction Volume.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Interaction Volume Get Interaction Prompt",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Interaction Volume",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Interaction Prompt",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Interaction Volume Get Is Locked": {
        "Description": "Returns False if the Interaction Volume is enabled, and True if it is locked.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Interaction Volume Get Is Locked",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Interaction Volume",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Is Locked",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Interaction Volume Set Interaction Prompt": {
        "Description": "Sets the interaction promt of an Interaction Volume.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Interaction Volume Set Interaction Prompt",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Interaction Volume",
                        "Description": ""
                    },
                    {
                        "Name": "Interaction Prompt",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Interaction Volume Set Locked": {
        "Description": "Disables or enables an Interaction Volume (but reversed).",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Interaction Volume Set Locked",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Interaction Volume",
                        "Description": ""
                    },
                    {
                        "Name": "Locked",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "int Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "int Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Int to Float": {
        "Description": "Converts the input int to a float.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Int to Float",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Invisible Collision Get Blocks Players": {
        "Description": "Outputs True if the target Invisible Collision object is set to collide with players.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Invisible Collision Get Blocks Players",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Invisible Collision",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Invisible Collision Get Enabled": {
        "Description": "Outputs True if the target Invisible Collision object is enabled.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Invisible Collision Get Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Invisible Collision",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Invisible Collision Set Blocks Players": {
        "Description": "Sets the player collision state of a target Invisible Collision object.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Invisible Collision Set Blocks Players",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Invisible Collision",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Invisible Collision Set Enabled": {
        "Description": "Sets the enabled state of a target Invisible Collision object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Invisible Collision Set Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Invisible Collision",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Is Event Instance": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Is Event Instance",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "Is Event Instance",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Get Is Private Instance": {
        "Description": "Returns True if the current room instance is private.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Get Is Private Instance",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "Is Private Instance",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Is Valid": {
        "Description": "Returns True if the input variable is not null. Certain variable types must be set before use because they can't have a default value. A Rec Room Object variable that isn't set isn't going to be valid.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Is Valid",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Is Valid",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Laser Pointer Get Color": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Laser Pointer Get Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Laser Pointer",
                        "Description": "The laser pointer object"
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": "The color of the laser beam"
                    }
                ]
            }
        ]
    },
    "Laser Pointer Get Enabled": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Laser Pointer Get Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Laser Pointer",
                        "Description": "The laser pointer object"
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": "Whether the beam is on or off"
                    }
                ]
            }
        ]
    },
    "Laser Pointer Get Length": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Laser Pointer Get Length",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Laser Pointer",
                        "Description": "The laser pointer object"
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Length",
                        "ReadonlyType": "float",
                        "Description": "The length of the beam, in meters"
                    }
                ]
            }
        ]
    },
    "Laser Pointer Set Color": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Laser Pointer Set Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Laser Pointer",
                        "Description": "The laser pointer object"
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": "The color of the laser beam"
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Laser Pointer Set Enabled": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Laser Pointer Set Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Laser Pointer",
                        "Description": "The laser pointer object"
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": "Whether the beam is on or off"
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Laser Pointer Set Length": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Laser Pointer Set Length",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Laser Pointer",
                        "Description": "The laser pointer object"
                    },
                    {
                        "Name": "Length",
                        "ReadonlyType": "float",
                        "Description": "The length of the beam, in meters"
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Lerp": {
        "Description": "Computes a linear interpolation.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Lerp",
                "ReadonlyTypeParams": {
                    "T": "(float | Quaternion | Vector3 | Color)"
                },
                "Inputs": [
                    {
                        "Name": "Start",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "End",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Progress",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Less Than": {
        "Description": "Returns True if input A is less than input B.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Less Than",
                "ReadonlyTypeParams": {
                    "T": "(int | float)"
                },
                "Inputs": [
                    {
                        "Name": "A",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "B",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Less or Equal": {
        "Description": "Returns True if input A is less than or equal to input B.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Less or Equal",
                "ReadonlyTypeParams": {
                    "T": "(int | float)"
                },
                "Inputs": [
                    {
                        "Name": "A",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "B",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Get Angle": {
        "Description": "Returns the angle in degrees of the target Dome Light or Spotlight.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Get Angle",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Angle",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Get Color": {
        "Description": "Returns the color of the target light.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Get Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Get Enabled": {
        "Description": "Returns True if the target light is emitting light.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Get Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Get Intensity": {
        "Description": "Returns the intensity of the target light.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Get Intensity",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Intensity",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Get Range": {
        "Description": "Returns the range of the target light.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Get Range",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Range",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Get Softness": {
        "Description": "Returns the softness value of the target light.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Get Softness",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Softness",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Get Specular Contribution": {
        "Description": "Returns the specular contribution of the target light.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Get Specular Contribution",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Specular Contribution",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Set Angle": {
        "Description": "Sets the angle of the spotlight's cone.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Set Angle",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    },
                    {
                        "Name": "Angle",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Set Color Id": {
        "Description": "Sets the color for a point light or a spotlight.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "NodeDescs": [
            {
                "Name": "Light Set Color Id",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Set Color": {
        "Description": "Sets the color for a point light or a spotlight.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Set Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Set Intensity": {
        "Description": "Sets the brightness level for a point light or a spotlight.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Set Intensity",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    },
                    {
                        "Name": "Intensity",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Set Range": {
        "Description": "Sets the range of a point light or a spotlight.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Set Range",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    },
                    {
                        "Name": "Range",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Set Softness": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Set Softness",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    },
                    {
                        "Name": "Softness",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Set Specular Contribution": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Set Specular Contribution",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    },
                    {
                        "Name": "Specular Contribution",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Turn Off": {
        "Description": "Turns off the point light or the spotlight.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Turn Off",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Light Turn On": {
        "Description": "Turns on the point light or the spotlight.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Light Turn On",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Light",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Add": {
        "Description": "Adds a new element to the end of the target list containing the input value.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Add",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    },
                    {
                        "Name": "Item",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List All True": {
        "Description": "If all of the bool values in the list are True then return true.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List All True",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<bool>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Any True": {
        "Description": "If any bool value in the list is True then return True.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Any True",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<bool>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List<bool> Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List<bool> Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<bool>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<bool>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List<Color> Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List<Color> Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Color>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Color>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Concat": {
        "Description": "Combine lists together into one list.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Concat",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "List 1",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    },
                    {
                        "Name": "List 2",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Contains": {
        "Description": "Outputs True if the target list contains the input value.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Contains",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    },
                    {
                        "Name": "Item",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List<Rec Room Object> Variable": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List<Rec Room Object> Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Rec Room Object>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Rec Room Object>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List<Destination Room> Variable": {
        "Description": "Stores a list of Destinations. Use constants to configure destinations.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List<Destination Room> Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Destination Room>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Destination Room>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Divide": {
        "Description": "Divides each element in the list by the next element.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Divide",
                "ReadonlyTypeParams": {
                    "T": "(float | int | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List<float> Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List<float> Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<float>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<float>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Get All Indices Of": {
        "Description": "Returns list of all indices of input item in target list if that list contains one or more instances of the item. Otherwise returns an empty list.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Get All Indices Of",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    },
                    {
                        "Name": "Item",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "List<int>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Get First Index Of": {
        "Description": "Returns first index of the item in target list if that list contains it. Otherwise returns -1.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Get First Index Of",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    },
                    {
                        "Name": "Item",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Insert": {
        "Description": "Insert a new element into the target list at the input index. The new element contains the input value.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Insert",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    },
                    {
                        "Name": "Item",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Index",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List<int> Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List<int> Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<int>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<int>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Max": {
        "Description": "Outputs the highest value in the target list.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Max",
                "ReadonlyTypeParams": {
                    "T": "(float | int)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Min": {
        "Description": "Outputs the lowest value in the target list.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Min",
                "ReadonlyTypeParams": {
                    "T": "(float | int)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Multiply": {
        "Description": "Multiplies each element in the list by the next element.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Multiply",
                "ReadonlyTypeParams": {
                    "T": "(float | int | Quaternion | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List<Player> Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List<Player> Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Player>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Player>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List<Quaternion> Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List<Quaternion> Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Quaternion>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Quaternion>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Remove At": {
        "Description": "Remove an element in the target list at the input index.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Remove At",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    },
                    {
                        "Name": "Index",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Remove Last": {
        "Description": "Removes the last element in a list.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Remove Last",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Shuffle": {
        "Description": "Randomize the order of the values in the given list.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Shuffle",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Sort": {
        "Description": "Sorts the given list in place in either ascending or descending order.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Sort",
                "ReadonlyTypeParams": {
                    "T": "(float | int | string)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    },
                    {
                        "Name": "Ascending",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List<string> Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List<string> Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<string>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<string>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Subtract": {
        "Description": "Subtracts each element in the list by the next element.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Subtract",
                "ReadonlyTypeParams": {
                    "T": "(float | int | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Sum": {
        "Description": "Adds each element in the list by the next element.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Sum",
                "ReadonlyTypeParams": {
                    "T": "(float | int | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List<Vector3> Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List<Vector3> Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Vector3>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "List<Vector3>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Logarithm": {
        "Description": "Computes a logarithm.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Logarithm",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Base",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Log String": {
        "Description": "Logs a string to the logging tab of your palette.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Log String",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Text",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Create": {
        "Description": "Creates a list from input values. Add more inputs by using the configure tool on the node and press \"Add Input\". All items in a list must be of the same type.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Create",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "Item",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "List",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Make Tuple": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Make Tuple",
                "ReadonlyTypeParams": {
                    "T0": "any",
                    "T1": "any"
                },
                "Inputs": [
                    {
                        "Name": "Item 0",
                        "ReadonlyType": "T0",
                        "Description": ""
                    },
                    {
                        "Name": "Item 1",
                        "ReadonlyType": "T1",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Tuple",
                        "ReadonlyType": "(T0, T1)",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Max": {
        "Description": "Returns largest of two or more values.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Max",
                "ReadonlyTypeParams": {
                    "T": "(int | float)"
                },
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Max",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Min": {
        "Description": "Returns smallest of two or more values.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Min",
                "ReadonlyTypeParams": {
                    "T": "(int | float)"
                },
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Min",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Modulo": {
        "Description": "Outputs the remainder of the first value is divided by the second.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Modulo",
                "ReadonlyTypeParams": {
                    "T": "(int | float)"
                },
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Remainder",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Multiply": {
        "Description": "Multiplies the two or more input values and outputs the result.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Multiply",
                "ReadonlyTypeParams": {
                    "T": "(int | float | Quaternion | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Product",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Music": {
        "Description": "Choose from a selection of music tracks, for use with the Audio Player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Music Constant",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Audio",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Nand": {
        "Description": "Outputs False only when all inputs are True. If any input is False, it outputs True.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Nand",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Input",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Noise": {
        "Description": "Samples a 3D Perlin noise field and returns a value usually bounded in [0,1].",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Noise",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Point",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Nor": {
        "Description": "Outputs True when all inputs are False. Otherwise, outputs False.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Nor",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Input",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Not": {
        "Description": "Outputs the opposite of the input boolean.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Not",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Unequip Object": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Unequip Object",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Or": {
        "Description": "Outputs True if any input is True. Otherwise outputs False.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Or",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Input",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Overlap Sphere": {
        "Description": "Get information about all the objects/players within a certain distance of a point in space (position, distance, direction, etc.)",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Overlap Sphere",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Origin",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Radius",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Collisions",
                        "ReadonlyType": "List<Collision Data>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Parse Bool": {
        "Description": "Converts the input string to a bool if able.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Parse Bool",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Parse Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Parse Color": {
        "Description": "Attempt to parse the given string as a hexadecimal color in the '#RRGGBB' format.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Parse Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Color",
                        "Description": ""
                    },
                    {
                        "Name": "Parse Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Parse Float": {
        "Description": "Converts the input string to a float if able.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Parse Float",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Parse Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Parse Int": {
        "Description": "Converts the input string to a integer if able.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Parse Int",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Parse Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Piston Get Acceleration": {
        "Description": "Gets the acceleration of a piston.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Piston Get Acceleration",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Piston",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Piston Get Distance": {
        "Description": "Outputs the current distance of the target Piston.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Piston Get Distance",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Piston",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Piston Get Target Distance": {
        "Description": "Outputs the set distance of the Marker on a target Piston.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Piston Get Target Distance",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Piston",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Piston Get Max Distance": {
        "Description": "Outputs the max distance of the target Piston.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Piston Get Max Distance",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Piston",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Piston Get Speed": {
        "Description": "Returns the speed of a piston.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Piston Get Speed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Piston",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Piston Set Acceleration": {
        "Description": "Sets the acceleration of the target Piston.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Piston Set Acceleration",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Piston",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Piston Set Distance": {
        "Description": "Moves the target piston to the input distance.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Piston Set Distance",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Piston",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Piston Set Target Distance": {
        "Description": "Sets the Marker distance of a target Piston.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Piston Set Target Distance",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Piston",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Piston Set Max Distance": {
        "Description": "Sets the max distance of a target Piston.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Piston Set Max Distance",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Piston",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Piston Set Speed": {
        "Description": "Sets the speed of a target Piston.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Piston Set Speed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Piston",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Add Role": {
        "Description": "Adds a Role to a Player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Add Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Definition Board": {
        "Description": "This is very similar to an object board that you would find on any object, except this is for all players! After placing, make sure to configure it and make sure it is active. Edit into this board and add any other chips you'd like and know that each player will have the same logic on them when you hit done editing.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": []
    },
    "Equip Object to Dominant Hand": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Equip Object to Dominant Hand",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Object To Equip",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Force Equip",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Steal",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Equip Object to Off Hand": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Equip Object to Off Hand",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Object To Equip",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Force Equip",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Steal",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Get All with Tag": {
        "Description": "Searches the room for all players with the input tag and outputs them as a list.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Get All with Tag",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Players with Tag",
                        "ReadonlyType": "List<Player>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Get Dominant Hand Is Right": {
        "Description": "Returns true if the given player has their right hand set as dominant.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Get Dominant Hand Is Right",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Get Equipped Objects": {
        "Description": "Gets equipped objects from a player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Get Equipped Objects",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Dominant Hand Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Off-Hand Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Left Hip Holster Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Right Hip Holster Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Shoulder Holster Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Get First with Tag": {
        "Description": "Gets the first player with the input tag.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Get First with Tag",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Get Is Jumping Or Falling": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Get Is Jumping Or Falling",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Is Jumping Or Falling",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Get Is Local": {
        "Description": "Outputs True if the input player is the local player executing the chip on their machine.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Get Is Local",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Has Role": {
        "Description": "Outputs True if the input player has the input role.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Has Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Holster Object": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Holster Object",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Object To Holster",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Force Holster",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Steal",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Get Is Authority Of": {
        "Description": "Outputs if a Player is authority of the input object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Get Is Authority Of",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Get Is Room Owner": {
        "Description": "Outputs True if the input Player is one of the current room's owners.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Get Is Room Owner",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Left Hand Finger Direction": {
        "Description": "Outputs the direction of a Player's left hand finger.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Left Hand Finger Direction",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Left Hand Rotation": {
        "Description": "Outputs the rotation of a Player's left hand.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Left Hand Rotation",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Left Hand Position": {
        "Description": "Outputs the postion of a Player's left hand in world space.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Left Hand Position",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Left Hand Thumb Direction": {
        "Description": "Outputs the direction of a Player's left hand thumb.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Left Hand Thumb Direction",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Left Hand Velocity": {
        "Description": "Outputs the velocity of a Player's left hand.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Left Hand Velocity",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Owns Room Key": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Owns Room Key",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Room Key",
                        "ReadonlyType": "Room Key",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Run",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "On Player Owns Room Key Complete",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player Owns Room Key",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Remove Role": {
        "Description": "Removes the input role from a target player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Remove Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Right Hand Finger Direction": {
        "Description": "Outputs the direction of a Player's right hand finger.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Right Hand Finger Direction",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Right Hand Rotation": {
        "Description": "Outputs the rotation of a Player's right hand.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Right Hand Rotation",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Right Hand Position": {
        "Description": "Outputs the postion of a Player's right hand in world space.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Right Hand Position",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Right Hand Thumb Direction": {
        "Description": "Outputs the direction of a Player's right hand thumb.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Right Hand Thumb Direction",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Right Hand Velocity": {
        "Description": "Outputs the velocity of a Player's right hand.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Right Hand Velocity",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Subscribes To Room Owner": {
        "Description": "Outputs True if the input Player subscribes to one of the current room's owners.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "NodeDescs": [
            {
                "Name": "Player Subscribes To Room Owner",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Seconds Until Enabled",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Unequip From Player": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Unequip From Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Unequip from Slots": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Unequip from Slots",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Dominant-Hand",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Off-Hand",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Left Hip Holster",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Right Hip Holster",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Shoulder Holster",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Objects Unequipped",
                        "ReadonlyType": "List<Rec Room Object>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player World UI": {
        "Description": "Define a set of world-space UI elements that can appear above a player.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player World UI",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Player World UI",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Power": {
        "Description": "Multiplies a value by itself an input number of times.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Power",
                "ReadonlyTypeParams": {
                    "T": "(int | float)"
                },
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Fire Projectile": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Fire Projectile",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    },
                    {
                        "Name": "Direction",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Get Projectile Color": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Get Projectile Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Get Projectile Count": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Get Projectile Count",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Count",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Get Hand Damage": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Get Hand Damage",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Damage",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Get Head Damage": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Get Head Damage",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Damage",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Get Projectile Lifetime": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Get Projectile Lifetime",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Lifetime",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Get Projectile Speed": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Get Projectile Speed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Speed",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Get Projectile Spread": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Get Projectile Spread",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Spread",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Get Torso Damage": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Get Torso Damage",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Damage",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Set Projectile Color": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Set Projectile Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Set Projectile Count": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Set Projectile Count",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    },
                    {
                        "Name": "Count",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Set Firing Player": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Set Firing Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Set Hand Damage": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Set Hand Damage",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    },
                    {
                        "Name": "Damage",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Set Head Damage": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Set Head Damage",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    },
                    {
                        "Name": "Damage",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Set Projectile Lifetime": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Set Projectile Lifetime",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    },
                    {
                        "Name": "Lifetime",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Set Projectile Speed": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Set Projectile Speed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    },
                    {
                        "Name": "Speed",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Set Projectile Spread": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Set Projectile Spread",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    },
                    {
                        "Name": "Spread",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Projectile Launcher Set Torso Damage": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Projectile Launcher Set Torso Damage",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Projectile Launcher",
                        "Description": ""
                    },
                    {
                        "Name": "Damage",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Prompt Local Player": {
        "Description": "Sends a watch notification to a player. The player which it sends a notification to depends on who's machine fires the exec pin. Once this watch notification is opened, the player can type responses into the text box and send back responses. You can define the prompt title and the prompt itself via inputs, and can also receive the player’s response via an output pin.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Prompt Local Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Prompt Title",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Prompt",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Complete",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Response",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Failed",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Create Angle Axis": {
        "Description": "Creates a rotation which rotates \"Angle\" degrees around \"Axis\".",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Create Angle Axis",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Angle",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Axis",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Create Euler Angles": {
        "Description": "Creates a quaternion from an input Vector3.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Create Euler Angles",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Angles",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Create From To": {
        "Description": "Creates a rotation which rotates from \"From\" to \"To\".",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Create From To",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "From",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "To",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Create Look": {
        "Description": "Creates a rotation with the specified forward and upwards directions.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Create Look",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Forward",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Upwards",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Create": {
        "Description": "Manually create a quaternion. Congratulations, you have reached peak math.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Create",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "X",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Y",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Z",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "W",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Quaternion",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Dot": {
        "Description": "The dot product between two rotations.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Dot",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Lhs",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    },
                    {
                        "Name": "Rhs",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Euler Angles": {
        "Description": "Outputs the input quaternion as a vector3.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Euler Angles",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Get Angle Axis": {
        "Description": "Gets the rotation which rotates angle degrees around axis.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Get Angle Axis",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Quaternion",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Angle",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Axis",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Inverse": {
        "Description": "Outputs the Inverse of rotation.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Inverse",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Normalize": {
        "Description": "Outputs the input quaternion with the same rotation but with a magnitude of 1.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Normalize",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Rotate Towards": {
        "Description": "Rotates a rotation from \"From\" towards \"To\".",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Rotate Towards",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "From",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    },
                    {
                        "Name": "To",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    },
                    {
                        "Name": "MaxDegreesDelta",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rotate Vector": {
        "Description": "Rotate a Vector3 with a Quaternion.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rotate Vector",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Rotation",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    },
                    {
                        "Name": "Point",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Slerp": {
        "Description": "Spherically interpolates between quaternions \"Start\" and \"End\". Progress is 0 to 1. Also a rare, but refreshing beverage.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Slerp",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Start",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    },
                    {
                        "Name": "End",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    },
                    {
                        "Name": "Progress",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Quaternion Split": {
        "Description": "Split a quaternion into its four float components: x, y, z, and w. Congratulations, you have reached peak math.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Quaternion Split",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Quaternion",
                        "ReadonlyType": "Quaternion",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "X",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Y",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Z",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "W",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Random Float": {
        "Description": "Generates a random float from [\"Min\" to \"Max\"]. \"Min\" is inclusive, and \"Max\" is also inclusive. For example with a \"Min\" of 0 and a \"Max\" of 1, both 0 and 1 have the possibility of getting output because they are both included in the range.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Random Float",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Min (Inclusive)",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Max (Inclusive)",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Random From List (Deprecated)": {
        "Description": "Outputs a random value from a target list.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "NodeDescs": [
            {
                "Name": "Random From List (Deprecated)",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "List",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Random From List": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Random From List",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "List",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Random Int": {
        "Description": "Generates a random integer from [\"Min\" to \"Max\"]. \"Min\" is inclusive, and \"Max\" is also inclusive. For example with a \"Min\" of 0 and a \"Max\" of 1, 0 and 1 will have a chance of being output.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Random Int",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Min (Inclusive)",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Max (Inclusive)",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Raycast": {
        "Description": "Fires an invisible ray from the \"Start Position\", in the \"Direction\" specified. Returns True if any object or player is hit within the target \"Max Distance\". Otherwise, returns False. You can configure the chip itself to ignore players or objects specifically.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Raycast",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Start Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Direction",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Max Distance (m)",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Hit",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Distance",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Hit Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Surface Normal",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Remove Tag": {
        "Description": "Removes a tag from the input object or player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Remove Tag",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Remove Tags": {
        "Description": "Removes the input list of tags from the input object or player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Remove Tags",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Tags",
                        "ReadonlyType": "List<string>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Reroute": {
        "Description": "Used to remove spaghetti from your creations. Consumes additional CPU heat.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rec Room Object Reset": {
        "Description": "Resets an object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rec Room Object Reset",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Reset Object",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Reset Player World UI": {
        "Description": "Reset the player's active world UI to its default values.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Reset Player World UI",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Reset Room": {
        "Description": "Resets the Room.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Reset Room",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ],
                "Outputs": []
            }
        ]
    },
    "Respawn (Deprecated)": {
        "Description": "Sets the position and rotation of the target player or object. Players will rotate about the vertical axis only. Will fail in the following cases: If the target object is currently held, selected/frozen by the maker pen, or is the child of a gizmo. Will also fail on players that are seated.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "NodeDescs": [
            {
                "Name": "Respawn (Deprecated)",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)",
                    "U": "(Vector3 | Quaternion)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Rotation",
                        "ReadonlyType": "U",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Radius",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Clear Velocity",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Use Rez Effects",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Failed",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn": {
        "Description": "Sets the position and rotation of the target player or object. Players will rotate about the vertical axis only. Will fail in the following cases: If the target object is currently held, selected/frozen by the maker pen, or is the child of a gizmo. Will also fail on players that are seated.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)",
                    "U": "(Vector3 | Quaternion)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Rotation",
                        "ReadonlyType": "U",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Radius",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Clear Velocity",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Use Rez Effects",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "RGB To Color": {
        "Description": "Return a color from the given red, green, and blue inputs. All inputs are in the range [0, 1].",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "RGB To Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Red",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Green",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Blue",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rotator Get Target Rotation": {
        "Description": "Outputs the rotation of the Marker on the target Rotator.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rotator Get Target Rotation",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rotator",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rotator Get Rotation Acceleration": {
        "Description": "Outputs the acceleration of a target Rotator.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rotator Get Rotation Acceleration",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rotator",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rotator Get Rotation": {
        "Description": "Outputs the rotation of a target Rotator in degrees.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rotator Get Rotation",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rotator",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rotator Get Rotation Speed": {
        "Description": "Outputs the speed of a target Rotator.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rotator Get Rotation Speed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rotator",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rotator Set Target Rotation": {
        "Description": "Sets the rotation of the Marker on a target Rotator.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rotator Set Target Rotation",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rotator",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rotator Set Rotation Acceleration": {
        "Description": "Sets the acceleration of a target Rotator.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rotator Set Rotation Acceleration",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rotator",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rotator Set Rotation": {
        "Description": "Sets the rotation of a target Rotator.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rotator Set Rotation",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rotator",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Rotator Set Rotation Speed": {
        "Description": "Sets the speed of a target Rotator.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Rotator Set Rotation Speed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Rotator",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Round": {
        "Description": "Rounds the input float to the nearest integral value.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Round",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Round to Int": {
        "Description": "Rounds an input value to the nearest integer.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Round to Int",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Sample Audio": {
        "Description": "Record and store custom a custom audio sample, for use with the Audio Player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Sample Audio Constant",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Audio",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Seat Get Lock Players In": {
        "Description": "Returns True if the target Seat is set to lock players in.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Seat Get Lock Players In",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Seat",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Lock In",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Seat Get Lock Players Out": {
        "Description": "Returns True if the target Seat is set to lock players out.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Seat Get Lock Players Out",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Seat",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Lock Out",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Seat Get Seated Player": {
        "Description": "Outputs the currently seated player of a target Seat.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Seat Get Seated Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Seat",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Seat Set Lock Players In": {
        "Description": "Prevents a Seated player from unseating themselves on a target Seat. Use circuits to unseat or unlock.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Seat Set Lock Players In",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Seat",
                        "Description": ""
                    },
                    {
                        "Name": "Lock Players In",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Seat Set Lock Players Out": {
        "Description": "Prevents players from sitting in a target seat.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Seat Set Lock Players Out",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Seat",
                        "Description": ""
                    },
                    {
                        "Name": "Lock Players Out",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Seat Set Seated Player": {
        "Description": "Seats an input player on a target Seat.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Seat Set Seated Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Seat",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Success",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Fail",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Seat Unseat Player": {
        "Description": "Unseats a currently seated player on a target Seat.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Seat Unseat Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Seat",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Self": {
        "Description": "Outputs the object of the current context. For example, a self node inside a light outputs that specific light of the light type. This can only be placed inside an object board of a specific object or a player or object definition board.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Self",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Sequence": {
        "Description": "Executes all output ports in order.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Sequence",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "1",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "2",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Camera Shake": {
        "Description": "Start a screen shake effect for the given player. This will have no effect on VR players.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Camera Shake",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Intensity",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Duration",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "List Set Element": {
        "Description": "Sets a value at a location in a list.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "List Set Element",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "List",
                        "ReadonlyType": "List<T>",
                        "Description": ""
                    },
                    {
                        "Name": "Index",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set HUD Element Color": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set HUD Element Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set HUD Element Label": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set HUD Element Label",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    },
                    {
                        "Name": "Label",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set HUD Element Max Value": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set HUD Element Max Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set HUD Element Value": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set HUD Element Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Leaderboard Set Local Player Stat": {
        "Description": "Set leaderboard stat for the local player on stat channel 1, 2 or 3.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Leaderboard Set Local Player Stat",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Channel",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player Name Color": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player Name Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Set",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player Vignette": {
        "Description": "Apply a vignette of the given color to the given player. The vignette will be displayed at full opacity for the given duration, and then fade out.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player Vignette",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Time",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Display Player World UI": {
        "Description": "Displays a target UI configuration above a given player.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Display Player World UI",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player World UI",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player World UI Primary Bar Color": {
        "Description": "Set the color of the primary bar in the given player's active world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player World UI Primary Bar Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player World UI Primary Bar Enabled": {
        "Description": "Set the enabled state of the primary bar in the given player's active world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player World UI Primary Bar Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player World UI Primary Bar Max Value": {
        "Description": "Set the max value of the primary bar in the given player's active world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player World UI Primary Bar Max Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player World UI Primary Bar Value": {
        "Description": "Set the value of the primary bar in the given player's active world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player World UI Primary Bar Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player World UI Secondary Bar Color": {
        "Description": "Set the color of the secondary bar in the given player's active world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player World UI Secondary Bar Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player World UI Secondary Bar Enabled": {
        "Description": "Set the enabled state of the secondary bar in the given player's active world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player World UI Secondary Bar Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player World UI Secondary Bar Max Value": {
        "Description": "Set the max value of the secondary bar in the given player's active world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player World UI Secondary Bar Max Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player World UI Secondary Bar Value": {
        "Description": "Set the value of the secondary bar in the given player's active world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player World UI Secondary Bar Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player World UI Text Color": {
        "Description": "Set the color of the text in the given player's active world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player World UI Text Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player World UI Text Enabled": {
        "Description": "Set the enabled state of the text in the given player's active world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player World UI Text Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Player World UI Text Value": {
        "Description": "Set the value of the text in the given player's active world UI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Player World UI Text Value",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Position (Deprecated)": {
        "Description": "Sets the position of the target player or object. Will fail in the following cases: If the target object is currently held, select/frozen by the maker pen, or is the child of a gizmo. Will also fail on players that are seated.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "NodeDescs": [
            {
                "Name": "Set Position (Deprecated)",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Failed",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Position": {
        "Description": "Sets the position of the target player or object. Will fail in the following cases: If the target object is currently held, select/frozen by the maker pen, or is the child of a gizmo. Will also fail on players that are seated.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Position",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Rotation": {
        "Description": "Sets the rotation of the target player or object. Players will rotate about the vertical axis only. Will fail in the following cases: If the target object is currently held, select/frozen by the maker pen, or is the child of a gizmo. Will also fail on players that are seated.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Rotation",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)",
                    "U": "(Vector3 | Quaternion)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Rotation",
                        "ReadonlyType": "U",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set Transform": {
        "Description": "Sets the transform (position and rotation) of the target player or object. Players will rotate about the vertical axis only. Will fail in the following cases: If the target object is currently held, select/frozen by the maker pen, or is the child of a gizmo. Will also fail on players that are seated.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set Transform",
                "ReadonlyTypeParams": {
                    "T": "(Player | Rec Room Object)",
                    "U": "(Vector3 | Quaternion)"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    },
                    {
                        "Name": "Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Rotation",
                        "ReadonlyType": "U",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "SFX": {
        "Description": "Choose from a selection of SFX, for use with the Audio Player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "SFX Constant",
                "ReadonlyTypeParams": {},
                "Inputs": [],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "Audio",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "SFX Get Volume": {
        "Description": "Outputs the volume of an SFX object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "SFX Get Volume",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "SFX",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "SFX Get Is Playing": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "SFX Get Is Playing",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "SFX",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "SFX Play": {
        "Description": "Plays a sound from an SFX object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "SFX Play",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "SFX",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "SFX Set Volume": {
        "Description": "Sets the volume for an SFX object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "SFX Set Volume",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "SFX",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "SFX Stop": {
        "Description": "Stops the sound currently playing from an SFX object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "SFX Stop",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "SFX",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set HUD Element Label Enabled": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set HUD Element Label Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Set HUD Element Value Text Enabled": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Set HUD Element Value Text Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "HUD Element",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Show Notification": {
        "Description": "Prints the input notification to the given player's screen.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Show Notification",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Player Show Subtitle": {
        "Description": "Displays a subtitle for a specified duration. If there is already a subtitle showing, it will be replaced only if this subtitle has an equal or higher priority. If the string is more than 200 characters, it will be displayed in multiple subtitles, each lasting a fraction of the total duration. Escape characters are ignored.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Player Show Subtitle",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Subtitle",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Duration",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Priority",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Sin": {
        "Description": "Computes the sine of a number.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Sin",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Spawner Reset": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Spawner Reset",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Spawner Internal Start Spawning": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Spawner Internal Start Spawning",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Spawner",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Amount of objects to spawn",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Time between spawns",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Add Avoid Role": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Add Avoid Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Point",
                        "ReadonlyType": "Player Spawn Point V2",
                        "Description": ""
                    },
                    {
                        "Name": "Role",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Add Avoid Tag": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Add Avoid Tag",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Point",
                        "ReadonlyType": "Player Spawn Point V2",
                        "Description": ""
                    },
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Add Spawn Role": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Add Spawn Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Point",
                        "ReadonlyType": "Player Spawn Point V2",
                        "Description": ""
                    },
                    {
                        "Name": "Role",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Success",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Add Spawn Tag": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Add Spawn Tag",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Point",
                        "ReadonlyType": "Player Spawn Point V2",
                        "Description": ""
                    },
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Get Active": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Get Active",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player Spawn Point V2",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Active",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Remove Avoid Role": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Remove Avoid Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Point",
                        "ReadonlyType": "Player Spawn Point V2",
                        "Description": ""
                    },
                    {
                        "Name": "Role",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Remove Avoid Tag": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Remove Avoid Tag",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Point",
                        "ReadonlyType": "Player Spawn Point V2",
                        "Description": ""
                    },
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Remove Spawn Role": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Remove Spawn Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Point",
                        "ReadonlyType": "Player Spawn Point V2",
                        "Description": ""
                    },
                    {
                        "Name": "Role",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Remove Spawn Tag": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Remove Spawn Tag",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Point",
                        "ReadonlyType": "Player Spawn Point V2",
                        "Description": ""
                    },
                    {
                        "Name": "Tag",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Respawn Player At Respawn Point": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Respawn Player At Respawn Point",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Spawn Point",
                        "ReadonlyType": "Player Spawn Point V2",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Clear Velocity",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Use Rez Effects",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Respawn Player": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Respawn Player",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Clear Velocity",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Use Rez Effects",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Respawn Point Set Active": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Respawn Point Set Active",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Player Spawn Point V2",
                        "Description": ""
                    },
                    {
                        "Name": "Active",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Spherecast": {
        "Description": "Fires an invisible sphere of the specified Radius from the Start Position, in the Direction specified. Returns true if any object or player is hit within the target Max Distance. Otherwise, returns false. You can configure the chip itself to ignore players or objects specifically.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Spherecast",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Start Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Radius",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Direction",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Max Distance (m)",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Hit",
                        "ReadonlyType": "bool",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    },
                    {
                        "Name": "Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    },
                    {
                        "Name": "Distance",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Hit Position",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Surface Normal",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Stop Camera Shake": {
        "Description": "Stop any current screen shake for the given player.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Stop Camera Shake",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Player",
                        "ReadonlyType": "Player",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "String Concat": {
        "Description": "Concatenate a given series of strings in order, with an optional separator.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "String Concat",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Separator",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "String Contains": {
        "Description": "Outputs True if the target string contains the input value.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "String Contains",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Sequence",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "String Format": {
        "Description": "Use this chip to combine multiple strings together into a single string output. The \"Format\" input is part of final string output and can include other string inputs by using this syntax: {input pin # starting at 0}. For example, a \"Format\" input with a default value of “Hello, {0}!” with a single additional input pin with the value \"World\" is fully output as \"Hello, World!\". If you had another input pin you would use {1} to denote the 2nd pin. You can add more string inputs by configuring the chip and pressing \"Add Input\".",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "String Format",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Format",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "String Length": {
        "Description": "Outputs the length of a target string in UTF-16 characters.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "String Length",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Length",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "string Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "string Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "String Split": {
        "Description": "Splits the target string at the input character.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "String Split",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Divider",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "List",
                        "ReadonlyType": "List<string>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "String Split At Index": {
        "Description": "Splits the target string in two at the input index.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "String Split At Index",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Index",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "List",
                        "ReadonlyType": "List<string>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "String Index Of": {
        "Description": "Outputs the index where the substring starts in the target string.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "String Index Of",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Substring",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Index",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "String To Lower": {
        "Description": "Outputs the target string in lower case.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "String To Lower",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "String To Upper": {
        "Description": "Outputs the target string in upper case.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "String To Upper",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Studio Event Sender": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Studio Event Sender",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Studio Object",
                        "ReadonlyType": "Studio Object",
                        "Description": ""
                    },
                    {
                        "Name": "Event",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Studio Event Sender - Bool": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Studio Event Sender - Bool",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Studio Object",
                        "ReadonlyType": "Studio Object",
                        "Description": ""
                    },
                    {
                        "Name": "Event",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Studio Event Sender - Float": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Studio Event Sender - Float",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Studio Object",
                        "ReadonlyType": "Studio Object",
                        "Description": ""
                    },
                    {
                        "Name": "Event",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Studio Event Sender - Int": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Studio Event Sender - Int",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Studio Object",
                        "ReadonlyType": "Studio Object",
                        "Description": ""
                    },
                    {
                        "Name": "Event",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Studio Event Sender - String": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Studio Event Sender - String",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Studio Object",
                        "ReadonlyType": "Studio Object",
                        "Description": ""
                    },
                    {
                        "Name": "Event",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Studio Event Sender - String, Bool": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Studio Event Sender - String, Bool",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Studio Object",
                        "ReadonlyType": "Studio Object",
                        "Description": ""
                    },
                    {
                        "Name": "Event",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value0",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value1",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Studio Event Sender - String, Float": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Studio Event Sender - String, Float",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Studio Object",
                        "ReadonlyType": "Studio Object",
                        "Description": ""
                    },
                    {
                        "Name": "Event",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value0",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value1",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Studio Event Sender - String, Int": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Studio Event Sender - String, Int",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Studio Object",
                        "ReadonlyType": "Studio Object",
                        "Description": ""
                    },
                    {
                        "Name": "Event",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value0",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value1",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Studio Event Sender - String, String": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Studio Event Sender - String, String",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Studio Object",
                        "ReadonlyType": "Studio Object",
                        "Description": ""
                    },
                    {
                        "Name": "Event",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value0",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Value1",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "String Substring": {
        "Description": "Allows you to extract individual parts from a string. You can think of this like a list of characters.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "String Substring",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "String",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Index",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Length",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Subtract": {
        "Description": "Takes one input value away from the other.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Subtract",
                "ReadonlyTypeParams": {
                    "T": "(int | float | Vector3)"
                },
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Difference",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Tan": {
        "Description": "Computes the tangent of a number.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Tan",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Clear Screen": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Clear Screen",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Text Screen",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Print Text To Screen": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Print Text To Screen",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Text Screen",
                        "Description": ""
                    },
                    {
                        "Name": "Text",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Text Get Color": {
        "Description": "Returns the color of the target Text gadget.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Text Get Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Text",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Text Get Text": {
        "Description": "Outputs the visible text for a Text object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Text Get Text",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Text",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Text",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Text Set Color Id": {
        "Description": "Sets the color for a Text object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "NodeDescs": [
            {
                "Name": "Text Set Color Id",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Text",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Text Set Color": {
        "Description": "Sets the color for a Text object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Text Set Color",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Text",
                        "Description": ""
                    },
                    {
                        "Name": "Color",
                        "ReadonlyType": "Color",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Text Set Material": {
        "Description": "Sets the material for a Text object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Text Set Material",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Text",
                        "Description": ""
                    },
                    {
                        "Name": "Material",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Text Set Text": {
        "Description": "Set the visible text for a Text object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Text Set Text",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Text",
                        "Description": ""
                    },
                    {
                        "Name": "Text",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "To Combatant": {
        "Description": "Covert a player or an AI value into a Combatant value.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "To Combatant",
                "ReadonlyTypeParams": {
                    "T": "(AI | Player)"
                },
                "Inputs": [
                    {
                        "Name": "Player or AI",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Combatant",
                        "ReadonlyType": "Combatant",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "To Rec Room Object": {
        "Description": "Casts a target specific object to a Rec Room Object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "To Rec Room Object",
                "ReadonlyTypeParams": {
                    "T": "Rec Room Object"
                },
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Rec Room Object",
                        "ReadonlyType": "Rec Room Object",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Toggle Button Get Is Pressed": {
        "Description": "Outputs True if the toggle button is pressed.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Toggle Button Get Is Pressed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Toggle Button",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Is Pressed",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Toggle Button Set Is Pressed": {
        "Description": "Sets a Toggle Button state to pressed.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Toggle Button Set Is Pressed",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Toggle Button",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "To String": {
        "Description": "Converts the input value to the string type. Example: the integer input 10 would output \"10\" as a string. Helpful for debugging purposes.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "To String",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result ",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Trigger Handle Get Primary Action Held": {
        "Description": "True if the primary action button is down; otherwise, False.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Trigger Handle Get Primary Action Held",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Trigger Handle",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Is Held",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Trigger Volume Get Filter Role": {
        "Description": "Gets the role name that is being used as a filter for a Trigger Volume.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Trigger Volume Get Filter Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Trigger Volume",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Trigger Volume Get Filter Tags": {
        "Description": "Gets the tags that are being used as a filter for a Trigger Volume.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Trigger Volume Get Filter Tags",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Trigger Volume",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "List<string>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Trigger Volume Get Object Count": {
        "Description": "Gets the number of objects currently inside a Trigger Volume. This is not synchronized with the Trigger Volume's events!",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Trigger Volume Get Object Count",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Trigger Volume",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Trigger Volume Get Player Count": {
        "Description": "Gets the number of players currently inside a Trigger Volume. This is not synchronized with the Trigger Volume's events!",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Trigger Volume Get Player Count",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Trigger Volume",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "int",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Trigger Volume Get Objects": {
        "Description": "Gets all of the objects currently inside a Trigger Volume. This is not synchronized with the Trigger Volume's events!",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Trigger Volume Get Objects",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Trigger Volume",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "List<Rec Room Object>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Trigger Volume Get Players": {
        "Description": "Gets all of the players currently inside a Trigger Volume. This is not synchronized with the Trigger Volume's events!",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Trigger Volume Get Players",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Trigger Volume",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "List<Player>",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Trigger Volume Set Filter Role": {
        "Description": "Sets the role name that is being used as a filter for a Trigger Volume.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Trigger Volume Set Filter Role",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Trigger Volume",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "string",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Trigger Volume Set Filter Tags": {
        "Description": "Sets the tags that are being used as a filter for a Trigger Volume. An object is considered by the Trigger Volume, if it has any of the tags in this list.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Trigger Volume Set Filter Tags",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Trigger Volume",
                        "Description": ""
                    },
                    {
                        "Name": "Value",
                        "ReadonlyType": "List<string>",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Value Integer Switch": {
        "Description": "Returns the associated input of the compare value that matches the 'match' input. Returns the default value if no match can be found.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Value Integer Switch",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "Match",
                        "ReadonlyType": "int",
                        "Description": ""
                    },
                    {
                        "Name": "Default",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Data",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Value String Switch": {
        "Description": "Returns the associated input of the compare value that matches the 'match' input. Returns the default value if no match can be found.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Value String Switch",
                "ReadonlyTypeParams": {
                    "T": "any"
                },
                "Inputs": [
                    {
                        "Name": "Match",
                        "ReadonlyType": "string",
                        "Description": ""
                    },
                    {
                        "Name": "Default",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Data",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Vector3 Cross": {
        "Description": "The cross product of two vectors results in a third vector which is perpendicular to the two input vectors.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Vector3 Cross",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Lhs",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Rhs",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Vector3 Dot": {
        "Description": "Computes the dot product. Commonly used to determine if the camera is facing a particular direction.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Vector3 Dot",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Lhs",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Rhs",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Vector3 Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Vector3 Variable",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Vector3 Normalize": {
        "Description": "Outputs the target vector, but its magnitude is 1.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Vector3 Normalize",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Vector3 Scale": {
        "Description": "Multiplies a vector by a scalar.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Vector3 Scale",
                "ReadonlyTypeParams": {
                    "T": "(int | float)"
                },
                "Inputs": [
                    {
                        "Name": "Value",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    },
                    {
                        "Name": "Scalar",
                        "ReadonlyType": "T",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Result",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Vector3 Create": {
        "Description": "Creates a new vector from X, Y, Z values.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Vector3 Create",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "X",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Y",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Z",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector3",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Vector Component Get Vector": {
        "Description": "Gets the direction and magnitude of the Vector Component.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Vector Component Get Vector",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Direction",
                        "ReadonlyType": "Vector Component",
                        "Description": ""
                    },
                    {
                        "Name": "Magnitude",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Vector",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Vector Get Magnitude": {
        "Description": "Outputs the length of the input vector.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Vector Get Magnitude",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Vector3",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Magnitude",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Vector3 Split": {
        "Description": "Breaks the X, Y, and Z values out of the input vector.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Vector3 Split",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Vector3",
                        "ReadonlyType": "Vector3",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "X",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Y",
                        "ReadonlyType": "float",
                        "Description": ""
                    },
                    {
                        "Name": "Z",
                        "ReadonlyType": "float",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Welcome Mat Get Enabled": {
        "Description": "Return whether target welcome mat is enabled (true) or disabled (false)",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Welcome Mat Get Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "Target",
                        "ReadonlyType": "Welcome Mat",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ]
            }
        ]
    },
    "Welcome Mat Set Enabled": {
        "Description": "Set target welcome mat to be enabled (true) or disabled (false)",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "NodeDescs": [
            {
                "Name": "Welcome Mat Set Enabled",
                "ReadonlyTypeParams": {},
                "Inputs": [
                    {
                        "Name": "SetEnabled",
                        "ReadonlyType": "exec",
                        "Description": ""
                    },
                    {
                        "Name": "Target",
                        "ReadonlyType": "Welcome Mat",
                        "Description": ""
                    },
                    {
                        "Name": "Enabled",
                        "ReadonlyType": "bool",
                        "Description": ""
                    }
                ],
                "Outputs": [
                    {
                        "Name": "SetEnabled",
                        "ReadonlyType": "exec",
                        "Description": ""
                    }
                ]
            }
        ]
    }
}