{
    "Absolute Value": {
        "Description": "Outputs the magnitude of the number. Is always positive.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "float",
                    "int"
                ]
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "float",
                    "int"
                ]
            }
        ]
    },
    "Acos": {
        "Description": "Computes the arccosine of a number.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ]
    },
    "Add": {
        "Description": "Computes the sum of two or more inputs.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "int",
                    "float",
                    "Vector3"
                ]
            }
        ],
        "Outputs": [
            {
                "Name": "Sum",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "int",
                    "float",
                    "Vector3"
                ]
            }
        ]
    },
    "Add Currency": {
        "Description": "Adds some amount to the Player's balance of one room currency. Configure this chip to set the affected currency.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Run",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Player",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Player"
            },
            {
                "Name": "Amount",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Run",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "On Add Currency Complete",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Success",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            },
            {
                "Name": "Total Balance",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Add Tag": {
        "Description": "Adds a tag to the input object or player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "Player",
                    "Rec",
                    "Room",
                    "Object"
                ]
            },
            {
                "Name": "Tag",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "string"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Add Tags": {
        "Description": "Adds tags to the input object or player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "Player",
                    "Rec",
                    "Room",
                    "Object"
                ]
            },
            {
                "Name": "Tags",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "List<string>"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "AI Get Line of Sight Parameters": {
        "Description": "Outputs the current line of sight parameters from the input AI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            }
        ],
        "Outputs": [
            {
                "Name": "Vision Type",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "string"
            },
            {
                "Name": "Vision Range (m)",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            },
            {
                "Name": "Vision Cone Angle",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            },
            {
                "Name": "Hearing Range (m)",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ]
    },
    "AI Get Target": {
        "Description": "Outputs the current combat target of an inputted AI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            }
        ],
        "Outputs": [
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Combatant"
            }
        ]
    },
    "AI Has Line of Sight To Target": {
        "Description": "Outputs if the input AI has line of sight to the input target.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "AI",
                    "Combatant",
                    "Rec",
                    "Room",
                    "Object",
                    "Patrol",
                    "Point",
                    "Player",
                    "Vector3"
                ]
            }
        ],
        "Outputs": [
            {
                "Name": "Has LoS",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ]
    },
    "AI Look At": {
        "Description": "Command an AI to look at the input target. If you want the AI to look in a passed in vector as a direction, set the “Look Target Is Direction” parameter to True. To make an AI stop looking, use the AI Stop Looking node.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            },
            {
                "Name": "Look Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "AI",
                    "Combatant",
                    "Rec",
                    "Room",
                    "Object",
                    "Patrol",
                    "Point",
                    "Player",
                    "Vector3"
                ]
            },
            {
                "Name": "Look Target is Direction",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "AI Path To": {
        "Description": "Commands the AI to path to the input target destination.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "AI",
                    "Combatant",
                    "Rec",
                    "Room",
                    "Object",
                    "Patrol",
                    "Point",
                    "Player",
                    "Vector3"
                ]
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "AI Rotate": {
        "Description": "Commands an AI to turn an inputted number of degrees. To command the AI to back to default rotating behavior, use the AI Stop Looking node.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            },
            {
                "Name": "Rotation (degrees)",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "float",
                    "int",
                    "Vector3"
                ]
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "AI Set Line of Sight Parameters": {
        "Description": "Sets an AI’s various LoS paramters. The “Cone” setting acts like a vision cone that sits in front of AIs like eyes, where the “Circle” setting acts like a radius around the AI. The Require LoS For Targetting parameter defines if AIs can see you through walls.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            },
            {
                "Name": "Vision Type (Cone/Circle)",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "string"
            },
            {
                "Name": "Vision Range (m)",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            },
            {
                "Name": "Vision Cone Angle (Cone Type Only)",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            },
            {
                "Name": "Hearing Range (m)",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            },
            {
                "Name": "Require LoS for targeting",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "AI Set Pathing Speed": {
        "Description": "Sets the speed for an inputted AI. This same setting can be determined by configuring the AI itself.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            },
            {
                "Name": "Speed (m/s)",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "AI Set Patrol Point": {
        "Description": "Set an AIs Path Point.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            },
            {
                "Name": "Patrol Point",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Patrol Point"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "AI Set Target": {
        "Description": "Sets the input AI’s current target.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Combatant"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "AI Start Combat Behavior": {
        "Description": "RRO Quest AI black box. This node tells the input AI to start their C# defined combat behavior. Note: this behavior varies per AI.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "AI Stop Combat Behavior": {
        "Description": "Tells the input AI to stop its C# defined combat behavior.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "AI Stop Looking": {
        "Description": "Command the input AI to cancel its current Rotate and Look At commands. Call this before telling an AI to path after having it Rotate/Look At so it rotates properly while moving again.",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "AI",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "AI Variable": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "AI"
            }
        ]
    },
    "Ambience": {
        "Description": "Choose from a selection of ambient audio tracks, for use with the Audio Player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Audio"
            }
        ]
    },
    "And": {
        "Description": "Outputs True when all inputs are True. If any input is False, it outputs False.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Input",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ]
    },
    "Angular Velocity Add": {
        "Description": "Add angular velocity to an object. The Angular Velocity vector should lie along the axis of the rotation being added, with a magnitude that (once multiplied by the speed multiplier) represents the clockwise rotation speed in deg/s. Once the new angular velocity has been computed, its speed will be capped by the Max Angular Speed.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Add Velocity",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Rec Room Object"
            },
            {
                "Name": "Angular Velocity",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Vector3"
            },
            {
                "Name": "Speed Multiplier",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            },
            {
                "Name": "Max Angular Speed (deg/s)",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Success",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ]
    },
    "Angular Velocity Add (Deprecated)": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "Inputs": [
            {
                "Name": "Add Velocity",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Rec Room Object"
            },
            {
                "Name": "Rotation",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "Vector3",
                    "Quaternion"
                ]
            },
            {
                "Name": "Velocity Multiplier",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            },
            {
                "Name": "Max Angular Velocity Applied (deg/s)",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Angular Velocity Set": {
        "Description": "Sets the angular velocity of an object. The Angular Velocity vector should lie along the axis of rotation, with a magnitude that (once multiplied by the speed multiplier) represents the clockwise rotation speed in deg/s.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Set Velocity",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Rec Room Object"
            },
            {
                "Name": "Angular Velocity",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Vector3"
            },
            {
                "Name": "Speed Multiplier",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Success",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ]
    },
    "Angular Velocity Set (Deprecated)": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Deprecated",
        "Inputs": [
            {
                "Name": "Set Velocity",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Rec Room Object"
            },
            {
                "Name": "Rotation",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "Vector3",
                    "Quaternion"
                ]
            },
            {
                "Name": "Velocity Multiplier",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Asin": {
        "Description": "Computes the arcsine of a number.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ]
    },
    "Atan": {
        "Description": "Computes the arctangent of a number.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ]
    },
    "Atan2": {
        "Description": "Computes the 2-argument arctangent of a number.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Y",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            },
            {
                "Name": "X",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ]
    },
    "Audio Player Get Playing": {
        "Description": "Returns True if the target Audio Player is playing.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Audio Player"
            }
        ],
        "Outputs": [
            {
                "Name": "Playing",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ]
    },
    "Audio Player Get Speed": {
        "Description": "Returns the speed multiplier of the target Audio Player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Audio Player"
            }
        ],
        "Outputs": [
            {
                "Name": "Speed",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ]
    },
    "Audio Player Get Volume": {
        "Description": "Returns the volume multiplier of the target Audio Player.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Audio Player"
            }
        ],
        "Outputs": [
            {
                "Name": "Volume",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ]
    },
    "Audio Player Pause": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Pause",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Audio Player"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Audio Player Play": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Play",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Audio Player"
            },
            {
                "Name": "Media",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Audio"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Audio Player Set Speed": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Set Speed",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Audio Player"
            },
            {
                "Name": "Speed",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Audio Player Set Volume": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Set Volume",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Audio Player"
            },
            {
                "Name": "Volume",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Audio Player Stop": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Stop",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Audio Player"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Audio Player Time Stamp": {
        "Description": "",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Audio Player"
            }
        ],
        "Outputs": [
            {
                "Name": "Time Stamp",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ]
    },
    "Beacon Get Color": {
        "Description": "Returns the color of the target Beacon object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Beacon"
            }
        ],
        "Outputs": [
            {
                "Name": "Color",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Color"
            }
        ]
    },
    "Beacon Get Enabled": {
        "Description": "Outputs True if the target Beacon object is enabled.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Beacon"
            }
        ],
        "Outputs": [
            {
                "Name": "Enabled",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ]
    },
    "Beacon Get Height": {
        "Description": "Returns the height of the target Beacon object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Beacon"
            }
        ],
        "Outputs": [
            {
                "Name": "Height",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ]
    },
    "Beacon Set Color": {
        "Description": "Sets the color of the target Beacon object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Beacon"
            },
            {
                "Name": "Color",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Color"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Beacon Set Enabled": {
        "Description": "Sets the enabled state of the target Beacon object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Beacon"
            },
            {
                "Name": "Enabled",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Beacon Set Height": {
        "Description": "Sets the height of the target Beacon object.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Beacon"
            },
            {
                "Name": "Height",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Bit And": {
        "Description": "Computes a bitwise AND. The result has a bit set for every bit that is set in both of the inputs.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            },
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Bit Leading Zeros": {
        "Description": "Counts the number of zeros at the beginning (most significant side) of the binary representation of an integer.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Leading Zeros",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Bit Nand": {
        "Description": "Computes a bitwise NAND. (NOT AND) The result has a bit set for every bit that is not set in either of the inputs.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            },
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Bit Not": {
        "Description": "Computes a bitwise NOT. The result has a bit set for every bit that is not set in the input.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Bit Or": {
        "Description": "Computes a bitwise OR. The result has a bit set for every bit that is set in either of the inputs.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            },
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Bit Pop Count": {
        "Description": "Counts the number of set bits in the binary representation of an integer.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Population",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Bit Rotate Left": {
        "Description": "Rotates digits in the binary representation of an integer to the left. As the leftmost bits fall off, they are used to fill the rightmost bits.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            },
            {
                "Name": "Shift",
                "ReadonlyType": null,
                "Description": "Number of bits to rotate",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Bit Rotate Right": {
        "Description": "Rotates digits in the binary representation of an integer to the right. As the rightmost bits fall off, they are used to fill the leftmost bits.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            },
            {
                "Name": "Shift",
                "ReadonlyType": null,
                "Description": "Number of bits to rotate",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Bit Shift Left": {
        "Description": "Shifts a value left by a number of bits. Leftmost bits are discarded, and rightmost bits are filled with zeros.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            },
            {
                "Name": "Shift",
                "ReadonlyType": null,
                "Description": "Shift count. The actual shift performed will be this value mod 32.",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Bit Shift Right": {
        "Description": "Shifts a value right by a number of bits. Rightmost bits are discarded, and leftmost bits are filled with zeros. (Logical shift)",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            },
            {
                "Name": "Shift",
                "ReadonlyType": null,
                "Description": "Shift count. The actual shift performed will be this value mod 32.",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Bit Trailing Zeros": {
        "Description": "Counts the number of zeros at the end (least significant side) of the binary representation of an integer.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Trailing Zeros",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Bit Xor": {
        "Description": "Computes a bitwise XOR. The result has a bit set for every bit that is set in exactly one of the inputs.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            },
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "bool Variable": {
        "Description": "Reads or writes a variable in the current scope based on the name.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ]
    },
    "Break Tuple": {
        "Description": "",
        "IsBeta": true,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Tuple",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "(T0, T1)"
            }
        ],
        "Outputs": [
            {
                "Name": "Item 0",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "any"
                ]
            },
            {
                "Name": "Item 1",
                "ReadonlyType": null,
                "Description": "",
                "DataType": [
                    "any"
                ]
            }
        ]
    },
    "Button Get Is Pressed": {
        "Description": "Outputs a target Button's Pressed property.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Button"
            }
        ],
        "Outputs": [
            {
                "Name": "Is Pressed",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ]
    },
    "Button Get Text": {
        "Description": "Outputs a target Button's Text property.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Button"
            }
        ],
        "Outputs": [
            {
                "Name": "Text",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "string"
            }
        ]
    },
    "Button Set Text": {
        "Description": "Sets an input Button's Text property.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Target",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Button"
            },
            {
                "Name": "Text",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "string"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "Ceil": {
        "Description": "Returns the least integral value greater than or equal to the input value.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ]
    },
    "Ceil to Int": {
        "Description": "Returns the smallest integer value greater than or equal to the input value.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "Value",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "float"
            }
        ],
        "Outputs": [
            {
                "Name": "Result",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "int"
            }
        ]
    },
    "Consumable Activate": {
        "Description": "Sets the input consumable to active. Use this to confirm a consumable used event. Can also be used independently. Displays the consumable as active in the backback and decreases the number of comsumables the player owns.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Consumable",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "Consumable"
            }
        ],
        "Outputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    },
    "If": {
        "Description": "Takes a boolean condition as an input. If True, the \"Then\" exec pin fires. If False, the \"Else\" exec pin fires.",
        "IsBeta": false,
        "IsTrollingRisk": false,
        "DeprecationStage": "Active",
        "Inputs": [
            {
                "Name": "",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Condition",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "bool"
            }
        ],
        "Outputs": [
            {
                "Name": "Then",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            },
            {
                "Name": "Else",
                "ReadonlyType": null,
                "Description": "",
                "DataType": "exec"
            }
        ]
    }
}